{"name": "test_guest_can_add_product_to_basket[http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7]", "status": "skipped", "statusDetails": {"message": "AssertionError: Can not detect equality of the good name in card and basket message", "trace": "browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"64aa979e97f2daaca74f595f05b7eb87\")>\nlink = 'http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7'\n\n    @pytest.mark.parametrize('link', [\"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer0\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer1\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer2\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer3\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer4\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer5\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer6\",\n                                      pytest.param(\"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7\", marks=pytest.mark.xfail),\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer8\",\n                                      \"http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer9\"])\n    def test_guest_can_add_product_to_basket(browser, link):\n        print(\"will test link [{}]\".format(link))\n        product_page = ProductPage(browser, link, 10)\n        product_page.open()\n    \n        product_page.add_to_basket()\n    \n>       product_page.should_be_basket_message_equal_to_product_name()\n\ntest_product_page.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Stepik_AutoTest_FinalProject.pages.product_page.ProductPage object at 0x000002165EF70C70>\n\n    def should_be_basket_message_equal_to_product_name(self):\n>       assert self.is_elements_text_equal(ProductPageLocators.PRODUCT_NAME_PRODUCT, \\\n            ProductPageLocators.PRODUCT_NAME_MESSAGE), \\\n            \"Can not detect equality of the good name in card and basket message\"\nE       AssertionError: Can not detect equality of the good name in card and basket message\n\npages\\product_page.py:13: AssertionError"}, "attachments": [{"name": "stdout", "source": "5e1a567f-7e33-4fda-8c05-3807b90606b8-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "link", "value": "'http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/?promo=offer7'"}], "start": 1584822214425, "stop": 1584822217136, "uuid": "b7a45904-b110-4d78-9aad-c37bdb94ca21", "historyId": "2337e2b0542ff21ff06031a45c664572", "testCaseId": "d1f983c76b7e8a55c7c09e84c59edee2", "fullName": "test_product_page#test_guest_can_add_product_to_basket", "labels": [{"name": "tag", "value": "xfail"}, {"name": "suite", "value": "test_product_page"}, {"name": "host", "value": "DESKTOP-EK7SGT2"}, {"name": "thread", "value": "9920-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_product_page"}]}